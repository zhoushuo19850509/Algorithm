!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
Delete	3_ListStacksQueues/list.h	/^void Delete(ElementType X, List L){$/;"	f
DeleteList	3_ListStacksQueues/list.h	/^void DeleteList(List L){$/;"	f
Element	3_ListStacksQueues/list.h	/^    ElementType Element;$/;"	m	struct:Node
ElementType	3_ListStacksQueues/list.h	/^typedef int ElementType;$/;"	t
Find	3_ListStacksQueues/list.h	/^Position Find(ElementType X, List L){$/;"	f
FindPrevious	3_ListStacksQueues/list.h	/^Position FindPrevious(ElementType X, List L){$/;"	f
Insert	3_ListStacksQueues/list.h	/^void Insert(ElementType X, List L, Position P){$/;"	f
IsEmpty	3_ListStacksQueues/list.h	/^int IsEmpty(List L){$/;"	f
IsLast	3_ListStacksQueues/list.h	/^int IsLast(Position P, List L){$/;"	f
List	3_ListStacksQueues/list.h	/^typedef PtrToNode List;$/;"	t
MakeEmpty	3_ListStacksQueues/list.h	/^List MakeEmpty(List L){$/;"	f
Next	3_ListStacksQueues/list.h	/^    Position Next;$/;"	m	struct:Node
Node	3_ListStacksQueues/list.h	/^struct Node{$/;"	s
Position	3_ListStacksQueues/list.h	/^typedef PtrToNode Position;$/;"	t
PtrToNode	3_ListStacksQueues/list.h	/^typedef struct Node *PtrToNode;$/;"	t
main	3_ListStacksQueues/list.c	/^int main(){$/;"	f
